{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\helena.kotoulova\\\\ReactCompleteGuide\\\\food-project\\\\src\\\\components\\\\context\\\\cartContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, React, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext({\n  items: [],\n  totalAmount: 0,\n  addMeal: {},\n  removeMeal: {}\n});\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst CartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.amount * action.item.price;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type = \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n    let updatedItems;\n\n    if (existingCartItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      updatedItems = [...state.items];\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount - 1\n      };\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\n_c = CartReducer;\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCartState] = useReducer(CartReducer, defaultCartState);\n\n  function addMealHandler(item) {\n    dispatchCartState({\n      type: \"ADD\",\n      item: item\n    });\n  }\n\n  function removeMealHandler(id) {\n    dispatchCartState({\n      type: \"REMOVE\",\n      id: id\n    });\n  }\n\n  const context = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addMeal: addMealHandler,\n    removeMeal: removeMealHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartProvider, \"A321fGrGOvATAKC1pl29YNNungo=\");\n\n_c2 = CartProvider;\nexport default CartProvider;\n/*\r\n  const [mealsInCart, setMealsInCart] = useState([]);\r\n  function addMeal(meal) {\r\n    setMealsInCart((prevMeals) => {\r\n      return [...prevMeals, meal];\r\n    });\r\n  }\r\n  function removeMeal(mealID) {\r\n    setMealsInCart((prevMeals) => {\r\n      return prevMeals.filter((meal) => meal.id !== mealID);\r\n    });\r\n  }\r\n*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CartReducer\");\n$RefreshReg$(_c2, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/helena.kotoulova/ReactCompleteGuide/food-project/src/components/context/cartContext.js"],"names":["createContext","React","useReducer","CartContext","items","totalAmount","addMeal","removeMeal","defaultCartState","CartReducer","state","action","type","updatedTotalAmount","item","amount","price","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","filter","CartProvider","props","cartState","dispatchCartState","addMealHandler","removeMealHandler","context","children"],"mappings":"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","sourcesContent":["import {createContext, React, useReducer } from \"react\";\r\n\r\nexport const CartContext = createContext({\r\n  items: [],\r\n  totalAmount: 0,\r\n  addMeal: {},\r\n  removeMeal: {},\r\n});\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst CartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.amount * action.item.price;\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    let updatedItems;\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  if ((action.type = \"REMOVE\")) {\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingCartItem.price;\r\n    let updatedItems;\r\n    if (existingCartItem.amount === 1) {\r\n      updatedItems = state.items.filter((item) => item.id !== action.id);\r\n    } else {\r\n      updatedItems = [...state.items];\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount - 1,\r\n      };\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nfunction CartProvider(props) {\r\n  const [cartState, dispatchCartState] = useReducer(\r\n    CartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  function addMealHandler(item) {\r\n    dispatchCartState({ type: \"ADD\", item: item });\r\n  }\r\n\r\n  function removeMealHandler(id) {\r\n    dispatchCartState({ type: \"REMOVE\", id: id });\r\n  }\r\n\r\n  const context = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addMeal: addMealHandler,\r\n    removeMeal: removeMealHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={context}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport default CartProvider;\r\n\r\n/*\r\n  const [mealsInCart, setMealsInCart] = useState([]);\r\n  function addMeal(meal) {\r\n    setMealsInCart((prevMeals) => {\r\n      return [...prevMeals, meal];\r\n    });\r\n  }\r\n  function removeMeal(mealID) {\r\n    setMealsInCart((prevMeals) => {\r\n      return prevMeals.filter((meal) => meal.id !== mealID);\r\n    });\r\n  }\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}